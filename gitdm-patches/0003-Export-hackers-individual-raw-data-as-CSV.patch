From 306ac67be96fa1f00d88006ab4234b92eb0c0677 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?C=C3=A9dric=20Bosdonnat?= <cedric.bosdonnat.ooo@free.fr>
Date: Wed, 20 Apr 2011 11:42:46 +0200
Subject: [PATCH 3/4] Export hackers individual raw data as CSV

The data exported for each hacker are the date of the first commit,
the date of the last commit, the commits count. These help distinguish
regular core hackers from one-shot contributors.
---
 README      |    3 +++
 csv.py      |   10 ++++++++++
 database.py |    6 ++++++
 gitdm       |   12 ++++++++++--
 4 files changed, 29 insertions(+), 2 deletions(-)

diff --git a/README b/README
index a5bdf63..a4457a3 100644
--- a/README
+++ b/README
@@ -42,6 +42,9 @@ be:
 
 	-h file	Generate HTML output to the given file
 
+    -H file Export individual developer raw data as CSV. These data could be
+        used to evaluate the fidelity of developers.
+
 	-l num	Only list the top <num> entries in each report.
 
 	-o file	Write text output to the given file (default is stdout).
diff --git a/csv.py b/csv.py
index cec1f06..9a49d96 100644
--- a/csv.py
+++ b/csv.py
@@ -38,3 +38,13 @@ def OutputCSV (file):
         author_name = stat.name.replace ("\"", ".").replace ("\\", ".")
         file.write ("\"%s\"\t\"%s\"\t%s\t%d\t%d\n"%(author_name, empl_name, stat.date, \
                                                     stat.added, stat.removed))
+
+def OutputHackersCSV (file, hlist):
+    if file is None:
+        return
+    file.write ("Name,Activity Start,Activity End,Commits Number\n")
+    for hacker in hlist:
+        if len(hacker.patches) > 0:
+            file.write ("\"%s\",%s,%s,%d\n"%(hacker.name, hacker.activity_start, \
+                                         hacker.activity_end, len(hacker.patches)))
+
diff --git a/database.py b/database.py
index f15cc7a..419781a 100644
--- a/database.py
+++ b/database.py
@@ -25,6 +25,8 @@ class Hacker:
         self.tested = [ ]
         self.reports = [ ]
         self.testcred = self.repcred = 0
+        self.activity_start = datetime.date.max
+        self.activity_end = datetime.date.min
 
     def addemail (self, email, elist):
         self.email.append (email)
@@ -44,6 +46,10 @@ class Hacker:
         self.added += patch.added
         self.removed += patch.removed
         self.patches.append (patch)
+        if patch.date < self.activity_start:
+            self.activity_start = patch.date
+        if patch.date > self.activity_end:
+            self.activity_end= patch.date
 
     #
     # There's got to be a better way.
diff --git a/gitdm b/gitdm
index 70f8138..f9b43b1 100755
--- a/gitdm
+++ b/gitdm
@@ -37,6 +37,7 @@ DumpDB = 0
 CFName = 'gitdm.config'
 DirName = ''
 Aggregate = 'month'
+HackersCSV = None
 
 #
 # Options:
@@ -47,6 +48,7 @@ Aggregate = 'month'
 # -d		Output individual developer stats
 # -D		Output date statistics
 # -h hfile	HTML output to hfile
+# -H file   Export individual developer raw data as CSV
 # -l count	Maximum length for output lists
 # -o file	File for text output
 # -r pattern	Restrict to files matching pattern
@@ -59,9 +61,9 @@ Aggregate = 'month'
 def ParseOpts ():
     global MapUnknown, DevReports
     global DateStats, AuthorSOBs, FileFilter, AkpmOverLt, DumpDB
-    global CFName, CSVFile, DirName, Aggregate
+    global CFName, CSVFile, DirName, Aggregate, HackersCSV
 
-    opts, rest = getopt.getopt (sys.argv[1:], 'a:b:dc:Dh:l:o:r:suwx:z')
+    opts, rest = getopt.getopt (sys.argv[1:], 'a:b:dc:Dh:H:l:o:r:suwx:z')
     for opt in opts:
         if opt[0] == '-a':
             AkpmOverLt = 1
@@ -75,6 +77,8 @@ def ParseOpts ():
             DateStats = 1
         elif opt[0] == '-h':
             reports.SetHTMLOutput (open (opt[1], 'w'))
+        elif opt[0] == '-H':
+            HackersCSV = open (opt[1], 'w')
         elif opt[0] == '-l':
             reports.SetMaxList (int (opt[1]))
         elif opt[0] == '-o':
@@ -401,6 +405,10 @@ if TotalChanged == 0:
 if DateStats:
     PrintDateStats ()
 
+csv.OutputHackersCSV (HackersCSV, hlist);
+if HackersCSV is not None:
+    HackersCSV.close ()
+
 csv.OutputCSV (CSVFile)
 if CSVFile is not None:
         CSVFile.close ()
-- 
1.7.3.4

