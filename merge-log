#!/bin/sh

# Parse the whole argument list to separate formatting arguments from query arguments

show_args=
revlist_args=
reverse=
while test $1; do
    case "$1" in
        --max-count=*|\
        --max-age=*|\
        --min-age=*|\
        --sparse|\
        --no-merges|\
        --remove-empty|\
        --all|\
        --branches|\
        --tags|\
        --remotes|\
        --stdin|\
        --quiet|\
        --bisect|\
        --bisect-vars|\
        --bisect-all)
            revlist_args="$revlist_args $1"
            ;;
        --reverse)
            reverse="--reverse"
            ;;
        -*)
            show_args="$show_args $1"
            ;;
        *)
            revlist_args="$revlist_args $1"
            ;;
    esac
    shift
done

# Get a date sorted list of the all the commits
cd ..
git rev-list --timestamp $revlist_args | sed -e "s:\$: ..:" >>$OLDPWD/all.log
cd $OLDPWD

for repo in `ls`; do
    if test -d $repo; then
        cd $repo
        git rev-list --timestamp $revlist_args | sed -e "s:\$: $repo:" >>../all.log
        cd ..
    fi
done

sort +0 -1 $reverse all.log > all.log.new
mv all.log.new all.log

# Get the commit infos for each commit
touch all-final.log

while read entry ; do
    timestamp=`echo $entry | cut -d ' ' -f 1`
    commitid=`echo $entry | cut -d ' ' -f 2`
    repo=`echo $entry | cut -d ' ' -f 3`
    if test "$timestamp" != "0" && test "$commitid" != "f07fbb7f983625881c1adb97768f1d9eaf250b22"; then
        cd $repo
        git --no-pager log -1 $show_args $commitid >>$OLDPWD/all-final.log
        cd $OLDPWD
    fi
done < all.log

# Show and cleanup
cat all-final.log
rm all.log
rm all-final.log
